% backtrack

subsets([], []).
subsets([H | T], [H | TR]) :-
    subsets(T, TR).
subsets([_ | T], TR) :-
    subsets(T, TR).

perm([], []).
perm([H | T], R) :-
    perm(T, RT),
    addToList(RT, H, R).        % DEPENDENCIES

comb(_, 0, []).
comb([H | T], K, [H | TR]) :-
    K > 0,
    K1 is K - 1,
    comb(T, K1, TR).
comb([_ | T], K, R) :-
    K > 0,
    comb(T, K, R).


arr(L, K, R) :-
    comb(L, K, R1),     % DEPENDENCIES
    perm(R1, R).        % DEPENDENCIES
